# Generated by Django 5.2.6 on 2025-09-12 20:41

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models
from django.db.models import Count


class Migration(migrations.Migration):

    dependencies = [
        ('kitchen', '0018_alter_dailymenu_date'),
    ]

    def dedupe_dailymenu_and_recipes(apps, schema_editor):
        DailyMenu = apps.get_model('kitchen', 'DailyMenu')
        DailyMenuRecipe = apps.get_model('kitchen', 'DailyMenuRecipe')

        dups = (
            DailyMenu.objects.values('date', 'meal_group_id', 'meal_type_id')
            .annotate(c=Count('id')).filter(c__gt=1)
        )
        for row in dups:
            date = row['date']
            mg_id = row['meal_group_id']
            mt_id = row['meal_type_id']
            menus = list(
                DailyMenu.objects.filter(date=date, meal_group_id=mg_id, meal_type_id=mt_id)
                .order_by('id')
            )
            if not menus or len(menus) == 1:
                continue
            master = menus[0]
            extras = menus[1:]
            for extra in extras:
                # reassign or merge recipes to master
                extra_recipes = list(DailyMenuRecipe.objects.filter(daily_menu_id=extra.id))
                for r in extra_recipes:
                    existing = DailyMenuRecipe.objects.filter(
                        daily_menu_id=master.id, recipe_id=r.recipe_id
                    ).first()
                    if existing:
                        try:
                            existing.amount = (existing.amount or 0) + (r.amount or 0)
                            existing.save()
                            r.delete()
                        except Exception:
                            # if any issue, fallback to reassign (duplicates will be handled by unique constraint)
                            r.daily_menu_id = master.id
                            r.save()
                    else:
                        r.daily_menu_id = master.id
                        r.save()
                # delete the extra daily menu after moving recipes
                extra.delete()
        # After merging DailyMenus, ensure no duplicate DailyMenuRecipe pairs remain
        dmr_dups = (
            DailyMenuRecipe.objects.values('daily_menu_id', 'recipe_id')
            .annotate(c=Count('id')).filter(c__gt=1)
        )
        for row in dmr_dups:
            dm_id = row['daily_menu_id']
            r_id = row['recipe_id']
            entries = list(
                DailyMenuRecipe.objects.filter(daily_menu_id=dm_id, recipe_id=r_id).order_by('id')
            )
            if len(entries) <= 1:
                continue
            master = entries[0]
            for extra in entries[1:]:
                try:
                    master.amount = (master.amount or 0) + (extra.amount or 0)
                    master.save()
                    extra.delete()
                except Exception:
                    # If merge fails, try deleting duplicates to satisfy constraint
                    extra.delete()

    operations = [
        migrations.AlterField(
            model_name='article',
            name='on_stock',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Celkové množství zboží na skladu', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Na skladu'),
        ),
        migrations.AlterField(
            model_name='article',
            name='total_price',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Celková cena zboží na skladu', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Celková cena s DPH'),
        ),
        migrations.AlterField(
            model_name='dailymenurecipe',
            name='amount',
            field=models.PositiveSmallIntegerField(help_text='Počet porcí', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Porcí'),
        ),
        migrations.AlterField(
            model_name='dailymenurecipe',
            name='daily_menu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dailymenurecipe', to='kitchen.dailymenu', verbose_name='Denní menu'),
        ),
        migrations.AlterField(
            model_name='historicalarticle',
            name='on_stock',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Celkové množství zboží na skladu', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Na skladu'),
        ),
        migrations.AlterField(
            model_name='historicalarticle',
            name='total_price',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Celková cena zboží na skladu', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Celková cena s DPH'),
        ),
        migrations.AlterField(
            model_name='menurecipe',
            name='amount',
            field=models.PositiveSmallIntegerField(help_text='Počet porcí', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Porcí'),
        ),
        migrations.AlterField(
            model_name='menurecipe',
            name='menu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menurecipe', to='kitchen.menu', verbose_name='Menu'),
        ),
        migrations.AlterField(
            model_name='recipearticle',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipearticle_set', to='kitchen.recipe', verbose_name='Recept'),
        ),
        migrations.AlterField(
            model_name='stockissuearticle',
            name='amount',
            field=models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Množství'),
        ),
        migrations.AlterField(
            model_name='stockissuearticle',
            name='average_unit_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Průměrná jednotková cena s DPH'),
        ),
        migrations.AlterField(
            model_name='stockreceiptarticle',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stockreceiptarticle_set', to='kitchen.article', verbose_name='Zboží'),
        ),
        migrations.RunPython(dedupe_dailymenu_and_recipes, migrations.RunPython.noop),
        migrations.AddConstraint(
            model_name='dailymenu',
            constraint=models.UniqueConstraint(fields=('date', 'meal_group', 'meal_type'), name='unique_dailymenu_per_date_group_type'),
        ),
        migrations.AddConstraint(
            model_name='dailymenurecipe',
            constraint=models.UniqueConstraint(fields=('daily_menu', 'recipe'), name='unique_dailymenu_recipe_pair'),
        ),
        migrations.AddConstraint(
            model_name='menurecipe',
            constraint=models.UniqueConstraint(fields=('menu', 'recipe'), name='unique_menu_recipe_pair'),
        ),
    ]
