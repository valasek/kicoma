[project]
name = "KiCoMa"
version = "1.0.0"
description = "Kitchen Cooking Management"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    # Core utilities
    "pytz", # https://github.com/stub42/pytz
    "python-slugify", # https://github.com/un33k/python-slugify
    "Pillow", # https://github.com/python-pillow/Pillow
    "argon2-cffi", # https://github.com/hynek/argon2_cffi
    "whitenoise", # https://github.com/evansd/whitenoise
    "python-dateutil", # https://github.com/dateutil/dateutil
    # Project specific
    "sentry-sdk",
    "tablib",
    "openpyxl",
    "weasyprint",
    "pyyaml",
    # Django
    "django", # https://www.djangoproject.com/
    "django-environ", # https://github.com/joke2k/django-environ
    "django-model-utils", # https://github.com/jazzband/django-model-utils
    "django-allauth", # https://github.com/pennersr/django-allauth
    "django-crispy-forms", # https://github.com/django-crispy-forms/django-crispy-forms
    "crispy-bootstrap5", # https://github.com/django-crispy-forms/crispy-bootstrap5
    "django-filter",
    "django-import-export",
    "django-tables2",
    "django-bootstrap5",
    "django-simple-history",
]

[project.optional-dependencies]
dev = [
    # Development tools
    "Werkzeug",  # https://github.com/pallets/werkzeug
    "ipdb",  # https://github.com/gotcha/ipdb
    "Sphinx",  # https://github.com/sphinx-doc/sphinx

    # data model generation
    "pygraphviz",
    
    # Testing
    "django-stubs",  # https://github.com/typeddjango/django-stubs
    "pytest",  # https://github.com/pytest-dev/
    "pytest-sugar",  # https://github.com/Frozenball/pytest-sugar
    "pytest-django",  # https://github.com/pytest-dev/pytest-django
    
    # Code quality
    "coverage",  # https://github.com/nedbat/coveragepy
    "pre-commit",  # https://github.com/pre-commit/pre-commit
    
    # Django development
    "factory-boy",              # https://github.com/FactoryBoy/factory_boy
    "django-debug-toolbar",     # https://github.com/jazzband/django-debug-toolbar
    "django-extensions",        # https://github.com/django-extensions/django-extensions
    "django-coverage-plugin",   # https://github.com/nedbat/django_coverage_plugin
]

prod = [
    # Production dependencies
    "gunicorn",  # https://github.com/benoitc/gunicorn
    "django-anymail[mailgun]",  # https://github.com/anymail/django-anymail
]

# Commented out redis dependencies - uncomment if needed
# redis = [
#     "redis",  # https://github.com/andymccurdy/redis-py
#     "django-redis",  # https://github.com/niwinz/django-redis
# ]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
target-version = "py311"
extend-exclude = [
    "migrations",
    "venv",
    ".venv",
    ".git",
    "__pycache__",
    "staticfiles",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DJ",  # flake8-django
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
]
ignore = [
    "DJ01",  # Avoid using null=True on string-based fields
    "E501",  # Line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"settings/*.py" = ["F401", "F403"]
"*/migrations/*.py" = ["E501"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# ty configuration (type checking)
[tool.ty]
python-version = "3.13"
strict = true

[tool.ty.src]
include = ["src", "tests"]
exclude = ["migrations", "staticfiles"]

# Coverage configuration
[tool.coverage.run]
source = ["."]
omit = [
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
    "*/tests/*",
    "manage.py",
    "*/settings/*",
    "*/staticfiles/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

# Pre-commit configuration
[[tool.pre-commit.repos]]
repo = "local"

[[tool.pre-commit.repos.hooks]]
id = "ruff-check"
name = "ruff-check"
entry = "uv run ruff check --fix"
language = "system"
types = ["python"]

[[tool.pre-commit.repos.hooks]]
id = "ruff-format"
name = "ruff-format"
entry = "uv run ruff format"
language = "system"
types = ["python"]

[[tool.pre-commit.repos.hooks]]
id = "ty-check"
name = "ty-check"
entry = "uv run ty check"
language = "system"
types = ["python"]
pass_filenames = false
